{"version":3,"sources":["components/Inputs.js","components/TodoItem.js","App.js","index.js"],"names":["Inputs","value","handleInputChange","handleAddTodo","handleSetStatus","handleClearAll","type","onChange","onClick","defaultValue","TodoItemWrapper","styled","div","TodoContent","props","$isDone","TodoButtonWrapper","Button","button","TodoItem","todo","handleSetEditTodo","handleDeleteTodo","handleToggleTodo","toggleEditArea","handleEditTodo","isDone","content","id","App","useRef","useState","todos","setTodos","setValue","status","setStatus","filteredTodos","setFilteredTodos","editedTodo","setEditedTodo","isEditing","setIsEditing","filter","map","filterTodos","useCallback","newContent","useEffect","className","e","target","current","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ab49fd8.chunk.js","sourcesContent":["export default function Inputs({\n  value,\n  handleInputChange,\n  handleAddTodo,\n  handleSetStatus,\n  handleClearAll,\n}) {\n  return (\n    <>\n      <input type=\"text\" value={value} onChange={handleInputChange} />\n      <button onClick={handleAddTodo}>Add</button>\n      <select onChange={handleSetStatus}>\n        <option defaultValue value=\"all\">\n          全部\n        </option>\n        <option value=\"completed\">已完成</option>\n        <option value=\"uncompleted\">未完成</option>\n      </select>\n      <button onClick={handleClearAll}>全部清除</button>\n    </>\n  );\n}\n","import styled from \"styled-components\";\n\n// styled components\n\nconst TodoItemWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 16px;\n  border: 1px solid black;\n\n  & + & {\n    margin-top: 12px;\n  }\n`;\nconst TodoContent = styled.div`\n  color: rgba(2, 40, 77)\n  font-size: 16px;\n\n  ${(props) =>\n    props.$isDone &&\n    `\n    text-decoration: line-through;\n  `}\n`;\nconst TodoButtonWrapper = styled.div``;\nconst Button = styled.button`\n  padding: 4px;\n  color: black;\n\n  &:hover {\n    color: red;\n  }\n\n  & + & {\n    margin-left: 4px;\n  }\n`;\n\nexport default function TodoItem({\n  todo,\n  handleSetEditTodo,\n  handleDeleteTodo,\n  handleToggleTodo,\n  handleEditTodo,\n  toggleEditArea,\n}) {\n  return (\n    <TodoItemWrapper>\n      <TodoContent $isDone={todo.isDone}>{todo.content}</TodoContent>\n      <TodoButtonWrapper>\n        <Button\n          onClick={() => {\n            handleSetEditTodo(todo);\n            toggleEditArea();\n          }}\n        >\n          編輯\n        </Button>\n        <Button\n          onClick={() => {\n            handleToggleTodo(todo.id);\n          }}\n        >\n          {todo.isDone ? \"未完成\" : \"已完成\"}\n        </Button>\n        <Button\n          onClick={() => {\n            handleDeleteTodo(todo.id);\n          }}\n        >\n          刪除\n        </Button>\n      </TodoButtonWrapper>\n    </TodoItemWrapper>\n  );\n}\n","import { useState, useEffect, useRef, useCallback } from \"react\";\nimport Inputs from \"./components/Inputs\";\nimport TodoItem from \"./components/TodoItem\";\nimport EditArea from \"./components/TodoItem\";\n\nfunction App() {\n  const id = useRef(1);\n  const [todos, setTodos] = useState([]);\n  const [value, setValue] = useState(\"\");\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  const [editedTodo, setEditedTodo] = useState();\n  const [isEditing, setIsEditing] = useState(false);\n\n  const handleAddTodo = () => {\n    setTodos([\n      {\n        id: id.current,\n        content: value,\n        isDone: false,\n      },\n      ...todos,\n    ]);\n    setValue(\"\");\n    id.current++;\n  };\n\n  const handleInputChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleDeleteTodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  const handleToggleTodo = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n        return {\n          ...todo,\n          isDone: !todo.isDone,\n        };\n      })\n    );\n  };\n\n  const handleSetStatus = (e) => {\n    setStatus(e.target.value);\n  };\n\n  const filterTodos = useCallback(() => {\n    switch (status) {\n      case \"completed\": {\n        setFilteredTodos(todos.filter((todo) => todo.isDone));\n        break;\n      }\n      case \"uncompleted\": {\n        setFilteredTodos(todos.filter((todo) => !todo.isDone));\n        break;\n      }\n      default: {\n        setFilteredTodos(todos);\n      }\n    }\n  }, [todos, status]);\n\n  const handleEditTodo = (newContent, id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n        return {\n          ...todo,\n          content: newContent,\n        };\n      })\n    );\n    toggleEditArea();\n  };\n\n  const handleSetEditTodo = (todo) => {\n    setEditedTodo(todo);\n  };\n\n  const handleClearAll = () => {\n    setTodos([]);\n  };\n\n  const toggleEditArea = () => {\n    setIsEditing(!isEditing);\n  };\n\n  useEffect(() => {\n    filterTodos();\n  }, [todos, status, filterTodos]);\n\n  return (\n    <div className=\"App\">\n      <Inputs\n        value={value}\n        handleInputChange={handleInputChange}\n        handleAddTodo={handleAddTodo}\n        handleSetStatus={handleSetStatus}\n        handleClearAll={handleClearAll}\n      />\n      {filteredTodos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          handleEditTodo={handleEditTodo}\n          handleToggleTodo={handleToggleTodo}\n          handleDeleteTodo={handleDeleteTodo}\n          handleSetEditTodo={handleSetEditTodo}\n          toggleEditArea={toggleEditArea}\n        />\n      ))}\n      {isEditing && (\n        <EditArea\n          handleEditTodo={handleEditTodo}\n          toggleEditArea={toggleEditArea}\n          editedTodo={editedTodo}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}